name: Build and Deploy
on: [push,workflow_dispatch]
permissions:
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install Node dependencies
        run: npm install

      - name: Install rust and wasm-pack
        run: |
          rustup update nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Cache wasm
        uses: Swatinem/rust-cache@v2
        with: 
            workspaces: wasm


      - name: Build wasm
        run: |
          npm run wasm:build

      - name: Build
        run: |
          npm run build

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
        
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}-

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist # The folder the action should deploy.